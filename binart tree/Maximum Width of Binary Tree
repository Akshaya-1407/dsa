/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(root == NULL){
            return 0;
        }
        queue<pair<TreeNode*,long long>> q;
        q.push({root,0});
        
        long long ans = 0;
        
        while(!q.empty()){
            int n = q.size();
            
            long long last = q.back().second;
            long first = q.front().second;
            ans = max((last-first)+1,ans);
            while(n--){
                auto node = q.front().first;
                long long vt = q.front().second;
                q.pop();
                

                if(node->left != NULL){
                    q.push({node->left,2*vt+1});
                }
                if(node->right != NULL){
                    q.push({node->right,2*vt+2});
                }
            }
            
        }

        return (int)ans;

    }
};
