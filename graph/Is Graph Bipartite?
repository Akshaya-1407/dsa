class Solution {
public:
    bool bfs(int i , int col , vector<vector<int>> &graph,vector<int> &vis){
        queue<int> q;
        q.push(i);
        vis[i] = col;
        while(!q.empty()){
            int u = q.front();
            q.pop();
            for(int &v : graph[u]){
                if(vis[v] == vis[u]){
                    return false;
                }
                else if(vis[v] == -1){
                    vis[v] = 1 - vis[u];
                    q.push(v);
                }
            }
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        vector<int> vis(graph.size(),-1);
        for(int i = 0 ; i < graph.size() ; i++){

            if(vis[i] == -1){
                if(bfs(i,0,graph,vis) == false){
                    return false;
                }
            }

        }
        return true;
    }
};
