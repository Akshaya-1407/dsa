class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> adj[numCourses];
        vector<int> vis(numCourses,-1);
        vector<int> ans;
        for(int i = 0 ; i<prerequisites.size() ; i++){
            for(int j = 0 ; j < prerequisites[0].size(); j++){
                if(j == prerequisites[0].size()-1){
                    int u = prerequisites[i][j];
                    int v = prerequisites[i][j-1];
                    adj[u].push_back(v);
                }
            }
        }
        vector<int> indegree(numCourses,0);
        queue<int> q;
        for(int i = 0 ; i < numCourses ;i++){
            for(int x : adj[i]){
                indegree[x]++;
            }
        }

        for(int i = 0 ; i < numCourses ; i++){
            if(indegree[i] == 0){
                q.push(i);
            }
        }

        while(!q.empty()){
            int u = q.front();
            ans.push_back(u);
            q.pop();

            for(int x : adj[u]){
                indegree[x]--;
                if(indegree[x] == 0){
                    q.push(x);
                }
            }
        }
        if(ans.size() == numCourses){
            return ans;
        }
        return {};
    }
};
