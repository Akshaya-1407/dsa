class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int sum = 0;
        int n = nums.size();
        for(int i = 0 ; i < n ;i++){
            sum += nums[i];
        }

        if(sum%2 != 0){
            return false;
        }

        int half = sum / 2;
        vector<vector<int>> t(n+1,vector<int>(half+1));

        for(int i = 0 ; i <= n ; i++){
            t[i][0] = true;
        }

        for(int i = 1 ; i <= half ; i++){
            t[0][i] = false;
        }

        for(int i = 1 ; i <= n ; i++){
            for(int j = 1 ; j <= half ; j++){
                if(j >= nums[i-1]){
                    t[i][j] = t[i-1][j] || t[i-1][j-nums[i-1]];
                }
                else{
                    t[i][j] = t[i-1][j];
                }
            }
        }

        return t[n][half];
    }
};
